/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Upgradeable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURIUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Counter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Counter__factory>;
    getContractFactory(
      name: "Listable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Listable__factory>;
    getContractFactory(
      name: "Listable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Listable__factory>;
    getContractFactory(
      name: "Royalties",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Royalties__factory>;
    getContractFactory(
      name: "XarbFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbFee__factory>;
    getContractFactory(
      name: "XarbMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbMint__factory>;
    getContractFactory(
      name: "XarbSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbSwap__factory>;
    getContractFactory(
      name: "Royalties",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Royalties__factory>;
    getContractFactory(
      name: "XarbMintUpgradeableTestV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbMintUpgradeableTestV2__factory>;
    getContractFactory(
      name: "XarbSwapUpgradeableTestV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbSwapUpgradeableTestV2__factory>;
    getContractFactory(
      name: "ListableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ListableUpgradeable__factory>;
    getContractFactory(
      name: "RoyaltiesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RoyaltiesUpgradeable__factory>;
    getContractFactory(
      name: "XarbFeeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbFeeUpgradeable__factory>;
    getContractFactory(
      name: "XarbMintUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbMintUpgradeable__factory>;
    getContractFactory(
      name: "XarbSwapUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbSwapUpgradeable__factory>;
    getContractFactory(
      name: "XarbFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbFee__factory>;
    getContractFactory(
      name: "XarbMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbMint__factory>;
    getContractFactory(
      name: "XarbSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.XarbSwap__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Upgradeable>;
    getContractAt(
      name: "IERC1155MetadataURIUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "IERC1155Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Counter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Counter>;
    getContractAt(
      name: "Listable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Listable>;
    getContractAt(
      name: "Listable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Listable>;
    getContractAt(
      name: "Royalties",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Royalties>;
    getContractAt(
      name: "XarbFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbFee>;
    getContractAt(
      name: "XarbMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbMint>;
    getContractAt(
      name: "XarbSwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbSwap>;
    getContractAt(
      name: "Royalties",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Royalties>;
    getContractAt(
      name: "XarbMintUpgradeableTestV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbMintUpgradeableTestV2>;
    getContractAt(
      name: "XarbSwapUpgradeableTestV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbSwapUpgradeableTestV2>;
    getContractAt(
      name: "ListableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ListableUpgradeable>;
    getContractAt(
      name: "RoyaltiesUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RoyaltiesUpgradeable>;
    getContractAt(
      name: "XarbFeeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbFeeUpgradeable>;
    getContractAt(
      name: "XarbMintUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbMintUpgradeable>;
    getContractAt(
      name: "XarbSwapUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbSwapUpgradeable>;
    getContractAt(
      name: "XarbFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbFee>;
    getContractAt(
      name: "XarbMint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbMint>;
    getContractAt(
      name: "XarbSwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.XarbSwap>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}

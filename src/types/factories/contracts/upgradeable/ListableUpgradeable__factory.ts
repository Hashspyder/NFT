/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ListableUpgradeable,
  ListableUpgradeableInterface,
} from "../../../contracts/upgradeable/ListableUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "editions",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "Collected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Listed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ListingCanceled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapId",
        type: "uint256",
      },
    ],
    name: "getSwap",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountLeft",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "enum ListableUpgradeable.SwapState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct ListableUpgradeable.Swap",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061058a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634a0d89ba14610030575b600080fd5b61004a600480360381019061004591906102f7565b610060565b604051610057919061041e565b60405180910390f35b610068610241565b60006033600084815260200190815260200160002060030154116100c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b8906103fe565b60405180910390fd5b603360008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660028111156101fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811115610236577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250509050919050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000815260200160008152602001600060028111156102dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525090565b6000813590506102f18161053d565b92915050565b60006020828403121561030957600080fd5b6000610317848285016102e2565b91505092915050565b6103298161044a565b82525050565b61033881610499565b82525050565b600061034b602283610439565b9150610356826104da565b604082019050919050565b60e0820160008201516103776000850182610320565b50602082015161038a6020850182610320565b50604082015161039d60408501826103ef565b5060608201516103b060608501826103ef565b5060808201516103c360808501826103ef565b5060a08201516103d660a08501826103ef565b5060c08201516103e960c085018261032f565b50505050565b6103f88161048f565b82525050565b600060208201905081810360008301526104178161033e565b9050919050565b600060e0820190506104336000830184610361565b92915050565b600082825260208201905092915050565b60006104558261046f565b9050919050565b600081905061046a82610529565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104a48261045c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4c69737461626c653a20546869732073776170206973206e6f7420657869737460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6003811061053a576105396104ab565b5b50565b6105468161048f565b811461055157600080fd5b5056fea264697066735822122050bcf6fb1c9a3e352232579f9d741387538392748a15f69d6034fe41892e04ae64736f6c63430008040033";

type ListableUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ListableUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ListableUpgradeable__factory extends ContractFactory {
  constructor(...args: ListableUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ListableUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ListableUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ListableUpgradeable {
    return super.attach(address) as ListableUpgradeable;
  }
  override connect(signer: Signer): ListableUpgradeable__factory {
    return super.connect(signer) as ListableUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListableUpgradeableInterface {
    return new utils.Interface(_abi) as ListableUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListableUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as ListableUpgradeable;
  }
}
